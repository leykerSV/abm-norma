<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class User extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('User_model');
    } 

    /*
     * Listing of users
     */
    function index()
    {
        $data['users'] = $this->User_model->get_all_users();
        
        $data['_view']=$this->load->view('user/index',$data,true);

        $data['titulo']="Documental Leyker Soft";
        $data['encabezado']="Listado Usuario";        
        $data['nivel']=$this->session->userdata('nivel');
        $data['nombre']=$this->session->userdata('nombrecompleto');
        $data['id']=$this->session->userdata('id');
        
                
        $this->load->view('templates/header',$data);
        $this->load->view('principal/main2');
        $this->load->view('templates/footer');
        
    }

    /*
     * Adding a new user
     */
    function add()
    {   
        $this->load->library('form_validation');

        $this->form_validation->set_rules('username','Username','max_length[30]|required');
        $this->form_validation->set_rules('nombre','Nombre','max_length[50]');
        $this->form_validation->set_rules('email','Email','valid_email|max_length[40]');

		
		if($this->form_validation->run())     
        {   
            $params = array(
				'habilitado' => $this->input->post('habilitado'),
				'nivel' => $this->input->post('nivel'),
				'password' => $this->input->post('password'),
				'username' => $this->input->post('username'),
				'nombre' => $this->input->post('nombre'),
				'email' => $this->input->post('email'),
                'last_login' => $this->input->post('last_login'),
                'area' => $this->input->post('idarea'),
                'depto' => $this->input->post('iddeptos')
            );
            
            $user_id = $this->User_model->add_user($params);
            redirect('user/index');
        }
        else
        {
            $this->load->model('Nivel_model');
            $data['all_nivel'] = $this->Nivel_model->get_all_nivel();
            
            $this->load->model('Area_model');
            $data['all_areas'] = $this->Area_model->get_all_areas();

            $data['_view']=$this->load->view('user/add',$data,true);

            $data['titulo']="Documental Leyker Soft";
            $data['encabezado']="Nuevo Usuario";        
            $data['nivel']=$this->session->userdata('nivel');
            $data['nombre']=$this->session->userdata('nombrecompleto');
            $data['id']=$this->session->userdata('id');
    
            
            $this->load->view('templates/header',$data);
            $this->load->view('principal/main2');
            $this->load->view('templates/footer');

        }
    }  

    /*
     * Editing a user
     */
    function edit($id)
    {   
        // check if the user exists before trying to edit it
        $data['user'] = $this->User_model->get_user($id);
        
        if(isset($data['user']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('username','Username','max_length[30]|required');
			$this->form_validation->set_rules('nombre','Nombre','max_length[50]');
            $this->form_validation->set_rules('email','Email','valid_email|max_length[40]');
            $this->form_validation->set_rules('idarea','Area','required');
            $this->form_validation->set_rules('iddeptos','Departamentos','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'habilitado' => $this->input->post('habilitado'),
					'nivel' => $this->input->post('nivel'),
					'password' => $this->input->post('password'),
					'username' => $this->input->post('username'),
					'nombre' => $this->input->post('nombre'),
					'email' => $this->input->post('email'),
                    'area' => $this->input->post('idarea'),
                    'depto' => $this->input->post('iddeptos'),
                    'codarea' => $this->input->post('iddeptos'),
                    'coddepto' => $this->input->post('iddeptos'),
                    'codarea' => $this->input->post('iddeptos'),
                    'coddepto' => $this->input->post('iddeptos')
                );

                $this->User_model->update_user($id,$params);            
                redirect('user/index');
            }
            else
            {
				$this->load->model('Nivel_model');
                $data['all_nivel'] = $this->Nivel_model->get_all_nivel();
                
                $this->load->model('Area_model');
                $data['all_areas'] = $this->Area_model->get_all_areas();

                $data['_view']=$this->load->view('user/edit',$data,true);

                $data['titulo']="Documental Leyker Soft";
                $data['encabezado']="EdiciÃ³n Usuario";        
                $data['nivel']=$this->session->userdata('nivel');
                $data['nombre']=$this->session->userdata('nombrecompleto');
                $data['id']=$this->session->userdata('id');
        
                
                $this->load->view('templates/header',$data);
                $this->load->view('principal/main2');
                $this->load->view('templates/footer');
            }
        }
        else
            show_error('The user you are trying to edit does not exist.');
    } 


    function marcarcomoleido($id)
    {
        $this->load->model('Userdb');
        $this->Userdb->marcarleido($id);
        redirect('menuprincipal');
    }

    /*
     * Deleting user
     */
    function remove($id)
    {
        $user = $this->User_model->get_user($id);

        // check if the user exists before trying to delete it
        if(isset($user['id']))
        {
            $this->User_model->delete_user($id);
            redirect('user/index');
        }
        else
            show_error('The user you are trying to delete does not exist.');
    }


        /*
     * Editing a user
     */
    function cambiapass()
    {   
        // check if the user exists before trying to edit it
        $data['user'] = $this->User_model->get_user($this->session->userdata('id'));
        
        if(isset($data['user']['id']))
        {
            $this->load->library('form_validation');

            $this->form_validation->set_rules('password','Password','required');
            $this->form_validation->set_rules('password1','Reingreso Pass','required');
		
			if($this->form_validation->run())     
            {   
                
                $params = array(
					'password' => MD5($this->input->post('password'))
                );

                $this->User_model->update_user($this->session->userdata('id'),$params);            
                redirect('logout');
            }
            else
            {
                $data['titulo']="Documental Leyker Soft";
                $data['encabezado']="Cambia Password";        
                $data['nivel']=$this->session->userdata('nivel');
                $data['nombre']=$this->session->userdata('nombrecompleto');
                $data['id']=$this->session->userdata('id');
                
                $data['_view'] = 'login/cambiapass';
                $data['_view']=$this->load->view('layouts/main',$data,true);
                $this->load->view('templates/header',$data);
                //$this->load->view('login/cambiapass');
                $this->load->view('principal/main2');
                $this->load->view('templates/footer');
            }
        }
        else
            show_error('The user you are trying to edit does not exist.');
    } 
    
}
